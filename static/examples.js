// Generated by CoffeeScript 1.3.3
var Tweet, TweetApp, TweetView, Tweets, app, someTweets;

Tweet = Backbone.Model.extend({
  urlRoot: "/api/tweets",
  validate: function(attributes) {
    if (attributes.author === "") {
      return "Invalid author";
    }
    if (attributes.text === "" || attributes.text.length > 140) {
      return "Invalid tweet";
    }
  }
});

Tweets = Backbone.Collection.extend({
  model: Tweet,
  url: "/api/tweets"
});

someTweets = new Tweets();

someTweets.on("add", function(tweet) {
  var view;
  view = new TweetView({
    model: tweet
  });
  return $("#tweet-list").prepend(view.render().el);
});

TweetView = Backbone.View.extend({
  tagName: "li",
  className: "tweet",
  render: function() {
    var tpl;
    tpl = _.template("<h2><%-author%></h2>\n<p><%-text%></p>");
    this.$el.append(tpl(this.model.toJSON()));
    return this;
  }
});

$(function() {
  return $("#send-tweet").click(function() {
    var tweet;
    tweet = new Tweet();
    if (tweet.save({
      author: $("#author").val(),
      text: $("#new-tweet").val()
    })) {
      someTweets.add(tweet);
      return $("#new-tweet").val("").focus();
    }
  });
});

TweetApp = Backbone.Router.extend({
  routes: {
    "last/:num": "showLast",
    "*path": "home"
  },
  showLast: function(num) {
    return someTweets.fetch({
      update: true,
      data: {
        limit: num
      }
    });
  },
  home: function() {
    someTweets.fetch({
      update: true
    });
    return setInterval(function() {
      return someTweets.fetch({
        update: true
      });
    }, 1000);
  }
});

app = new TweetApp();

Backbone.history.start({
  pushState: true
});
